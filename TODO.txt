// Minor features
// ==============

// DARK MODE
// "My Gists" page should be cards rather than full page-width
// Fix text editor/preview panels behavior. Slider for size can disappear or get dropped "behind" the outer edge of its container,
// making it impossible to recover and adjust.
// Improve flexibility in / around the text panels to allow the surroundings to grow and shrink as needed
// Add multiple source options for input and outputs to file convertor (file or direct gist)
// Clean up the file conversion options. JSON <> JSON should be converting from a string to "pretty" and vice versa,
// Carry over the behavior of the file converter panels to the editor/preview panels
// Add additional details, highlighting for errors in inputt files
// Add 'clear conversion history'
// Make title clickable to open community gist in-app
// Fix "No content available" on gist preview
// Add "badge" on gist list to indicate public/private
// Add publisher avatar to communitygists
// Add link to profile (internal profile) of publisher to community gists
// Add "fork" and "download" options to community gist 
// Add "shared gist" tickbox to 'new gist' context as tick box beneath "Public gist" tickbox
// Reduce border around codeblock "terminal"
// Make "Name" field in profile editable
// Add "github profile" to profile (public by default, optionally private)
// Add various (optional) fields to profile for socials, website, etc.



// Major features
// ==============

// implement UI library
// https://park-ui.com/
// https://park-ui.com/react/docs/components/editable

// OBJECTS
// --------

// accordion -- use for multi-file gists in the editor view

// alert -- for auto-saving unfinished texts

// avatar -- for "profile" and small badge beside username in header / sidebar
// and on community shared gists

// badge -- use for gist properties in gist list like "public/private", "file type(s)",

// button -- replace all buttons

// card -- use for gists in list page

// carousel -- n/a

// checkbox -- use in gist creation/editor context, place in each gist card object to allow "select multiple"

// clipboard -- n/a

// collapsible -- n/a

// color picker -- n/a

// combobox -- n/a

// date picker -- date filtering of gists

// dialog -- upgrade the codeblock 'terminal' to make the 2 buttons on the top-left functional,
// green should make expand the panel and "pop over" the rest of the content and take the focus.
// yellow will be the regular embedded size on the web app, and should be the default state.
// Pushing yellow from some other state, and should return it to that state from any other. 
// Red will minimize the panel down to just the title bar

// drawer - replace left sidebar with left-opening drawer

// editable - Use for user-editable fields in the profile

// field - n/a

// fieldset - n/a

// file upload - use on new gist page and file convert page

// form label - n/a

// hover card - add to commmunity gists including any public gist/git

// icon button - pottantially add as 

// icon - maybe

// input - maybe

// menu - full options withi the connac f itt

// number input - n/a

// pagination - implement on gist list where there are multiplle pages required.

// pin input - n/a

// popover - utilize to pop-over the code block "terminal" upon clicking green button

// progress - n/a

// radio button group - n/a

// radio group - n/a

// rating group - n/a

// segment group

// select - n/a

// skeleton - n/a

// slider - n/a

// spinner - Use during loading in any content

// splitter - use for editor/preview panels

// switch - n/a

// table - n/a

// tabs - dashboard should be tabbed, no scrolling

// tags input - for advanced search of the gist list

// textarea - should be used for new / editor / preview panels alike

// toast - n/a

// toggle group - should be used for all areas where a text editorm
//  (and therefore toolbar) are required

// tooltip - n/a

// tree view - n/a


// Rework for production mode:

// Add to your package.json dependencies
// "connect-mongo": "^4.6.0" or
// "connect-redis": "^7.0.1" or
// "express-session-sqlite": "^2.1.1"

// Then in server.js, modify your session configuration:
// const session = require('express-session');

// Choose ONE of these store options:

// Option 1: MongoDB store
// const MongoStore = require('connect-mongo');
// const sessionStore = MongoStore.create({
//   mongoUrl: 'mongodb://localhost:27017/gist-manager-sessions',
//   ttl: 14 * 24 * 60 * 60 // 14 days in seconds
// });

// Option 2: Redis store (requires Redis server)
// const RedisStore = require('connect-redis').default;
// const Redis = require('ioredis');
// const redisClient = new Redis();
// const sessionStore = new RedisStore({ client: redisClient });

// Option 3: SQLite store (simplest, file-based)
// const SqliteStore = require('express-session-sqlite').default;
// const sessionStore = new SqliteStore({
//   driver: 'sqlite3',
//   path: './data/sessions.sqlite',
//   ttl: 14 * 24 * 60 * 60 // 14 days in seconds
// });

// Then use the store with your session middleware
// app.use(session({
//   store: sessionStore, // Use the persistent store instead of MemoryStore
//   secret: sessionSecret,
//   resave: false,
//   saveUninitialized: false,
//   cookie: {
//     secure: process.env.NODE_ENV === 'production',
//     httpOnly: true,
//     sameSite: process.env.NODE_ENV === 'production' ? 'none' : 'lax',
//     maxAge: 24 * 60 * 60 * 1000 // 24h
//   }
// }));